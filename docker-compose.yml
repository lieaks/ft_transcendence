version: '3.8'

services:
  frontend:
    container_name: frontend
    build: ./frontend/
    networks:
        - frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - 8000:8000
    volumes:
      - ./frontend/:/var/www/html/app

  backend:
    container_name: backend
    build: ./backend/
    networks:
        - frontend
        - backend
    restart: unless-stopped
    depends_on:
      - postgres
    expose:
      - 3000:3000

  postgres:
    container_name: postgres
    image: postgres
    networks:
        - backend
    restart: unless-stopped
    ports:
      - 5432:5432
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  prisma-studio:
    container_name: prisma-studio
    build:
      context: .
      dockerfile: ./docker/prisma-studio.dockerfile
      args:
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_DB: ${POSTGRES_DB}
        POSTGRES_HOST: ${POSTGRES_HOST}
    restart: unless-stopped
    ports:
      - 5555:5555
    env_file:
      - .env
    networks:
        - backend

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge
