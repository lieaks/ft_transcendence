version: '3.8'

services:
  nginx:
    container_name: nginx
    image: nginx:alpine
    ports:
      - 8080:80
    depends_on:
      - vite-build
      - backend
      - postgres
    volumes:
      - vite-build:/usr/share/nginx/html
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 10s
      timeout: 5s
      retries: 3

  vite-build:
    container_name: vite-build
    build:
      context: .
      dockerfile: ./docker/vite-build.dockerfile
    volumes:
      - vite-build:/var/www/vitejs/dist

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: ./docker/backend.dockerfile
    networks:
        - frontend
        - backend
    restart: unless-stopped
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
    ports:
      - 3000:3000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 10s
      timeout: 5s
      retries: 3

  postgres:
    container_name: postgres
    image: postgres
    networks:
        - backend
    restart: unless-stopped
    expose:
      - 5432:5432
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  prisma-studio:
    container_name: prisma-studio
    build:
      context: .
      dockerfile: ./docker/prisma-studio.dockerfile
    restart: unless-stopped
    depends_on:
      - postgres
    ports:
      - 5555:5555
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
    networks:
        - backend

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge

volumes:
  vite-build:
